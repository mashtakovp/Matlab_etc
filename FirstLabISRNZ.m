close all;
%1 задание
disp('ЗАДАНИЕ 1');
% Создаем матрицу x1 размером 12x12, например, заполненную случайными числами от 0 до 1
x1 = rand(12, 12);

% Выделяем подматрицу x2 размером 5x5, содержащую последние пять элементов x1 по строкам и столбцам
x2 = x1(end-4:end, end-4:end);

% Выводим x1 и x2 на экран
disp('Матрица x1:');
disp(x1);
disp('Подматрица x2:');
disp(x2);

%2 задание
disp('ЗАДАНИЕ 2');
x1 = rand(12, 12);
disp('Матрица x1:');
disp(x1);
#Создание матрицы x3 с четными строками матрицы x1
x2 = x1(2:2:end, :);
% Создание матрицы x3 с нечетными столбцами матрицы x1
x3 = x1(:, 1:2:end);
disp('Матрица x2:');
disp(x2);
disp('Матрица x3:');
disp(x3);

%3 задание
disp('ЗАДАНИЕ 3');
x1 = linspace(-1,1,100);
disp(x1);
%line1 = -1:(1 - (-1))/ (100 -1 ):1;
x1(x1 < 0.5) = 0;
disp(x1);

%4 задание
disp('ЗАДАНИЕ 4');
x1 = rand(5);
x2 = rand(5);
res1 = x1 * x2;
res2 = x1 .* x2;
disp('Матрица 1:');
disp(x1);
disp('Матрица 2');
disp(x2);
disp('Матричное перемножение');
disp(res1);
disp('Поэлементное перемножение');
disp(res2);

%5 задание
disp('ЗАДАНИЕ 5');
% Создание вектор-строки и вектор-столбца с 3 случайными элементами
x1 = rand(1, 3); % Вектор-строка
x2 = rand(3, 1); % Вектор-столбец
res1 = x1 * x2;
res2 = x1 .* x2;
disp('Матрица 1:');
disp(x1);
disp('Матрица 2');
disp(x2);
disp('Матричное перемножение');
disp(res1);
disp('Поэлементное перемножение');
disp(res2);
%6 задание
disp('ЗАДАНИЕ 6');
n = 11;
k = 12;
m = 13;
x1 = rand(n, k);
x2 = rand(k, m);
tic;
x3 = x1 * x2;
time1 = toc;

x3_new = zeros(n, m);
tic;
for i = 1:n
    for j = 1:m
        for k_index = 1:k
            x3_new(i, j) = x3_new(i, j) + x1(i, k_index) * x2(k_index, j);
        end
    end
end
%Инициализируется матрица x3_new  нулями.
%С помощью трех вложенных циклов (i для строк n, j для столбцов m и k_index для суммирования произведений элементов строки на столбец) выполняется умножение матриц поэлементно:
%каждый элемент (i, j) в результирующей матрице является суммой произведений соответствующих элементов i-й строки первой матрицы и j-го столбца второй матрицы.
time2 = toc;
disp('Матричное перемножение:');
disp('Time:');
disp(time1);
disp(x3);
disp('Поэлементный алгоритм:');
disp('Time:');
disp(time2);
disp(x3_new);
%7 задание
disp('ЗАДАНИЕ 7');
x1 = rand(1, 10)
x2 = zeros(1, 10-1);
tic; %Поэлементный подход
for i = 1:(10-1)
    x2(i) = x1(i+1) - x1(i);
end
time1 = toc;
disp('Поэлементный алгоритм:');
disp('Time:');
disp(time1);
x2
tic;
x2 = x1(2:end) - x1(1:end-1); %векторизованный вариант
time2 = toc;
disp('Векторизованный алгоритм:');
disp('Time:');
disp(time2);
x2
%8 задание
disp('ЗАДАНИЕ 8');
x1 = rand(7);
x2 = zeros(size(x1)); % Инициализация x2 нулями того же размера, что и x1
for i = 2:7
    x2(i,:) = x1(i,:) - x1(i-1,:); % Вычитаем предыдущую строку из текущей
end
x3 = zeros(size(x1)); % Инициализация x3 нулями того же размера, что и x1
for j = 2:7
    x3(:,j) = x1(:,j) - x1(:,j-1); % Вычитаем предыдущий столбец из текущего
end
x1
x2
x3
%9 задание
disp('ЗАДАНИЕ 9');
x1 = rand(1, 10);
     % Создание вектора x2
x2 = zeros(1, 10-2); % Инициализация вектора x2 нулями; его длина на 2 меньше длины x1
for i = 1:(10-2)
    x2(i) = mean(x1(i:i+2)); % Среднее значение трех соседних элементов вектора x1
end
x1
x2
%10 задание
disp('ЗАДАНИЕ 10');
x1 = rand(10)
x2 = x1(x1<0.5)
%x2_matrix = zeros(size(x1));
%x2_matrix(x1 < 0.5) = x1(x1 < 0.5);

%11 задание
disp('ЗАДАНИЕ 11');
x1 = rand(10)
x2 = x1 < 0.5; % Создание логической матрицы, где true (1) если элемент x1 < 0.5, иначе false (0)
x2 = double(x2) % Преобразование логической матрицы в числовую

%12 задание
disp('ЗАДАНИЕ 12');
n = 5; % Размер матрицы
x = linspace(-1, 1, n); % Вектор значений от -1 до 1 по оси X
y = linspace(-1, 1, n); % Вектор значений от -1 до 1 по оси Y
[X, Y] = meshgrid(x, y); % Создание матриц координат
% Вычисление расстояния от центра до каждой точки
x1 = sqrt((X).^2 + (Y).^2)

%13 задание
disp('ЗАДАНИЕ 13 график');
x1 = linspace(-1, 1, 1000);
x2 = sin(2 * pi * x1);
x3 = cos(2 * pi * x1);
figure;
% Построение графика для x2
plot(x1, x2, 'b', 'LineWidth', 1);
hold on;
% Добавление x3 на график
plot(x1, x3, 'r', 'LineWidth', 1);
hold off;
% Добавление легенды и заголовка
legend('sin(2\pi x1)', 'cos(2\pi x1)');
title('График синуса и косинуса');
xlabel('x1');
ylabel('Значения функций');

%14 задание
disp('ЗАДАНИЕ 14');
x1 = linspace(-1, 1, 1000);
% Поэлементное вычисление синуса
tic;
x2_loop = zeros(size(x1)); % Инициализация вектора x2
for i = 1:length(x1)
    x2_loop(i) = sin(x1(i)); % Вычисление синуса для каждого элемента
end
time1 = toc;
%Векторизованный метод
tic;
x2_vectorized = sin(x1); % Векторизованное вычисление синуса
time2 = toc;
disp('Поэлементное вычисление');
time1
%x2_loop
disp('Векторизованное вычисление');
time2
%x2_vectorized

%15 задание
disp('ЗАДАНИЕ 15');
x1 = rand(1, 4)
tic;
summa = sum(x1);
time1 = toc;

tic;
summ = 0;
for i = 1:length(x1)
    summ += x1(i);
end
time2 = toc;
disp('Встроенная функция');
time1
summa
disp('Поэлементное сложение');
time2
summ

%16 задание
disp('ЗАДАНИЕ 16');
x1 = linspace(-1, 1, 100);
x2 = linspace(-10, 10, 100);
% Вычисление x3 как произведение синуса x1 на косинус x2
x3 = sin(x1) .* cos(x2);
figure;
plot(x3)
title('График x3')
xlabel('Индекс элемента')
ylabel('Значение x3')

%17 задание
disp('ЗАДАНИЕ 17');
x1_real = rand(5, 5); % Реальная часть
x1_i = rand(5, 5); % Мнимая часть
x1 = x1_real + 1i*x1_i % Комплексная матрица
% Создание матриц x2 и x3, хранящих модуль и фазу чисел из x1
x2 = abs(x1) % Модуль комплексных чисел
x3 = angle(x1) % Фаза комплексных чисел (в радианах)
%18 задание
disp('ЗАДАНИЕ 18');
N = 100; % Размер матрицы
x = linspace(-1, 1, N); % Вектор значений от -1 до 1
[X, Y] = meshgrid(x, x); % Генерация координатных матриц

% Расчет расстояния от центра матрицы до каждой точки
x1 = sqrt(X.^2 + Y.^2);
x2 = exp(-x1.*x1/0.125);
figure;
imagesc(x2);
colorbar;
title('Визуализация матрицы');
xlabel('Ось X');
ylabel('Ось Y');
%19 задание
disp('ЗАДАНИЕ 19');
d = 1:10;
Matrix = diag(d)


